name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.8.1"
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test

  build-and-release:
    name: Build and Release
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.8.1"
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci

      - name: Build and Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # First run semantic-release to get the new version
          npx semantic-release
          
          # Then build with the updated version
          npm run build
          
          # Get the current version from package.json
          VERSION=$(node -p "require('./package.json').version")
          
          # Create a new release with the built assets
          gh release create "v$VERSION" \
            --title "Release v$VERSION" \
            --notes "$(cat CHANGELOG.md)" \
            dist/*.AppImage \
            dist/*.deb 